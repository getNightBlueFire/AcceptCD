name: Java CI with Maven + Docker + Notifications

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Cache Maven packages
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven

      - name: Set up JDK 18
        uses: actions/setup-java@v2
        with:
          java-version: '18'
          distribution: 'temurin'

      - name: Show Java & Maven versions
        run: |
          java -version
          mvn -v

      - name: Print Java version
        run: java -version

      - name: Print Maven version
        run: mvn -v

      - name: List directory contents
        run: ls -la

      - name: Sleep for 5 seconds (–±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π —à–∞–≥)
        run: sleep 5

      - name: Echo Hello World
        run: echo "Hello from GitHub Actions üëã"

      - name: Run Checkstyle
        run: mvn checkstyle:checkstyle

      - name: List checkstyle output (debug)
        run: ls -la target/site

      - name: Upload Checkstyle report
        uses: actions/upload-artifact@v4
        with:
          name: checkstyle-report
          path: target/site/checkstyle.xml

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

      - name: Upload target directory (–ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: target/

      #- name: Fail on purpose (–¥–ª—è —Ç–µ—Å—Ç–∞ —Ñ–µ–π–ª–∞, –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –µ—Å–ª–∏ –Ω–µ –Ω–∞–¥–æ)
      #  run: exit 1

      - name: Use secret token
        run: echo "The secret is ${{ secrets.MY_SECRET_TOKEN }}"

      - name: Run inline shell script
        run: |
          echo "Start custom logic"
          for i in {1..3}
          do
            echo "Count $i"
            sleep 1
          done
          echo "Done"

      - name: Make deploy.sh executable
        run: chmod +x deploy.sh

      - name: Run deploy script
        run: ./deploy.sh

      - name: Build Docker image
        run: docker build -t my-app:latest .

      - name: Notify Telegram
        run: |
            curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚úÖ Build succeeded on ${{ github.repository }} at commit ${{ github.sha }}"

  release:
    needs: build
    if: github.event_name == 'release'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Upload release artifact
        uses: ncipollo/release-action@v1
        with:
          artifacts: "target/*.jar"
          tag: ${{ github.ref_name }}
          token: ${{ secrets.GITHUB_TOKEN }}